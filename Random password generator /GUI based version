import tkinter as tk
from tkinter import messagebox
import random
import string
import pyperclip

# Function to generate a secure password
def generate_password(length, include_uppercase, include_numbers, include_symbols):
    characters = string.ascii_lowercase

    if include_uppercase:
        characters += string.ascii_uppercase
    if include_numbers:
        characters += string.digits
    if include_symbols:
        characters += string.punctuation

    password = []
    if include_uppercase:
        password.append(random.choice(string.ascii_uppercase))
    if include_numbers:
        password.append(random.choice(string.digits))
    if include_symbols:
        password.append(random.choice(string.punctuation))

    while len(password) < length:
        password.append(random.choice(characters))

    random.shuffle(password)
    return ''.join(password)

# Function to handle password generation from GUI inputs
def generate_password_from_gui():
    try:
        length = int(entry_length.get())
        include_uppercase = var_uppercase.get()
        include_numbers = var_numbers.get()
        include_symbols = var_symbols.get()

        if length <= 0:
            messagebox.showerror("Invalid Input", "Password length must be greater than zero.")
            return

        password = generate_password(length, include_uppercase, include_numbers, include_symbols)
        entry_password.delete(0, tk.END)
        entry_password.insert(0, password)
    except ValueError:
        messagebox.showerror("Invalid Input", "Please enter a valid number for the password length.")

# Function to copy password to clipboard
def copy_to_clipboard():
    password = entry_password.get()
    pyperclip.copy(password)
    messagebox.showinfo("Copied", "Password copied to clipboard!")

# Create the main window
root = tk.Tk()
root.title("Secure Password Generator")

# Create and position widgets
label_length = tk.Label(root, text="Password Length:")
label_length.grid(row=0, column=0, padx=10, pady=10)

entry_length = tk.Entry(root, width=5)
entry_length.grid(row=0, column=1, padx=10, pady=10)

# Checkbox for including uppercase letters
var_uppercase = tk.BooleanVar()
checkbox_uppercase = tk.Checkbutton(root, text="Include Uppercase Letters", variable=var_uppercase)
checkbox_uppercase.grid(row=1, column=0, columnspan=2, padx=10, pady=5)

# Checkbox for including numbers
var_numbers = tk.BooleanVar()
checkbox_numbers = tk.Checkbutton(root, text="Include Numbers", variable=var_numbers)
checkbox_numbers.grid(row=2, column=0, columnspan=2, padx=10, pady=5)

# Checkbox for including symbols
var_symbols = tk.BooleanVar()
checkbox_symbols = tk.Checkbutton(root, text="Include Symbols", variable=var_symbols)
checkbox_symbols.grid(row=3, column=0, columnspan=2, padx=10, pady=5)

# Button to generate password
button_generate = tk.Button(root, text="Generate Password", command=generate_password_from_gui)
button_generate.grid(row=4, column=0, columnspan=2, padx=10, pady=10)

# Entry field to display generated password
entry_password = tk.Entry(root, width=30)
entry_password.grid(row=5, column=0, columnspan=2, padx=10, pady=10)

# Button to copy password to clipboard
button_copy = tk.Button(root, text="Copy to Clipboard", command=copy_to_clipboard)
button_copy.grid(row=6, column=0, columnspan=2, padx=10, pady=10)

# Start the GUI loop
root.mainloop()
